name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    env:
      NODE_ENV: test
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${{ secrets.NEXT_PUBLIC_GOOGLE_MAPS_API_KEY }}
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: lts/*
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npm install -D @playwright/test typescript @types/react @types/node
        
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
      
    - name: Build Next.js app
      run: npm run build
      
    - name: Start Next.js app and run tests
      run: |
        npm run dev & # Start the dev server in the background
        npx wait-on http://localhost:3000 # Wait for the server to be ready
        # Run cross-browser compatibility tests first
        npx playwright test tests/e2e/cross-browser-compatibility.spec.ts --project=chromium --project=firefox --project=webkit
        # Run mobile tests on mobile configurations
        npx playwright test tests/e2e/mobile-responsiveness.spec.ts --project=mobile-chrome --project=mobile-safari
        # Run other remaining tests
        npm run test:ci
      env:
        CI: true
        PLAYWRIGHT_TEST_BASE_URL: http://localhost:3000
        
    - name: Create test summary
      if: always()
      run: |
        echo "# Test Results Summary" > test-summary.md
        echo "## Cross-Browser Compatibility" >> test-summary.md
        npx playwright show-report playwright-report --reporter=markdown >> test-summary.md
        
    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
        
    - name: Publish Test Summary
      if: always()
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('test-summary.md', 'utf8');
          const context = github.context;
          
          if (context.payload.pull_request) {
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
          }
